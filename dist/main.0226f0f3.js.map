{"version":3,"sources":["main.js"],"names":["$lastLi","$","xObject","JSON","parse","localStorage","getItem","hashMap","logo","url","rander","find","remove","map","node","index","$li","removePrefix","insertBefore","on","window","open","e","stopPropagation","splice","replace","inputUrl","prompt","trim","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem"],"mappings":"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","file":"main.0226f0f3.js","sourceRoot":"../src","sourcesContent":["const $lastLi = $('#addSite')\nconst xObject = JSON.parse(localStorage.getItem('x'))\n\nconst hashMap = xObject || [\n    { logo: 'B', url: 'https://www.bilibili.com' },\n    { logo: 'W', url: 'https://wallhaven.cc/' },\n    { logo: 'T', url: 'https://taobao.com/' },\n    { logo: 'J', url: 'https://jd.com' },\n    { logo: 'I', url: 'https://iqiyi.com' }\n]\n\nfunction rander() {\n    $('.site-list').find('li:not(#addSite)').remove()\n\n    hashMap.map((node, index) => {\n        const $li = $(`<li>\n        <div class=\"site\">\n            <div class='icon-wrapper'>\n                ${node.logo}\n            </div>\n            <div class=\"link\">\n                ${removePrefix(node.url)}\n            </div>\n            <div class='close'>\n                <svg class=\"icon\">\n                    <use xlink:href=\"#icon-remove\"></use>\n                </svg>\n            </div>\n        </div>\n    </li>`).insertBefore($lastLi)\n        $li.on('click', () => {\n            window.open(node.url)\n        })\n        $li.on('click', '.close', (e) => {\n            e.stopPropagation() //阻止事件冒泡\n            hashMap.splice(index, 1)\n            rander()\n        })\n    })\n}\n\nconst removePrefix = (url) => {\n    return url.replace('https://', '')\n        .replace('http://', '')\n        .replace('www.', '')\n        .replace(/\\/.*/, '') //删除/开头的内容\n}\n\nrander()\n\n$('#addSite').on('click', () => {\n    let inputUrl = window.prompt('Please enter site\\'s url：').trim()\n    if (inputUrl.indexOf('http') !== 0) {\n        inputUrl = 'https://' + inputUrl\n    }\n    hashMap.push({\n        logo: removePrefix(inputUrl)[0].toUpperCase(),\n        url: inputUrl\n    })\n    rander()\n})\n\n\nwindow.onbeforeunload = ()=>{\n    const string = JSON.stringify(hashMap) //对象转为字符串\n    localStorage.setItem('x',string)\n}\n\n// $(document).on('keypress',(e)=>{ //只能打开一个匹配到到第一个网址，待优化\n//     let {key} = e\n//     hashMap.map((node,index)=>{\n//         if(hashMap[index].logo.toLocaleLowerCase() === key){\n//             window.open(node.url)\n//         }\n//     })\n// })"]}